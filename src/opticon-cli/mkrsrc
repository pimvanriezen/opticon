#!/bin/bash
rm -f rsrc.c
rm -f rsrc.h

cat > rsrc.h << _EOF_
#ifndef _RSRC_H
#define _RSRC_H 1
typedef struct {
    const unsigned int sz;
    const char *data;
} resource;

_EOF_

find rsrc -type d | grep / | cut -f2 -d/ | while read fork; do
  echo "typedef struct {" >> rsrc.h
  find rsrc/$fork -type f | while read file; do
    id=$(echo "$file" | sed -e "s@.*/@@;s/[.]rsrc$//;s/[.]/_/g")
    echo "    resource $id;" >> rsrc.h
  done
  echo "} rsrc_${fork};" >> rsrc.h
  echo "" >> rsrc.h
done

echo "typedef struct {" >> rsrc.h
find rsrc -type d | grep / | cut -f2 -d/ | while read fork; do
  echo "    rsrc_$fork $fork;" >> rsrc.h
done

echo "} resourcefork;" >> rsrc.h
echo "" >> rsrc.h
echo "extern resourcefork rsrc;" >> rsrc.h
echo "#endif" >> rsrc.h

cat > rsrc.c << _EOF_
#include "rsrc.h"

resourcefork rsrc = {
_EOF_

isfirstfork=1

find rsrc -type d | grep / | cut -f2 -d/ | while read fork; do
  if [ "$isfirstfork" = "0" ]; then
    echo "    ," >> rsrc.c
  fi
  isfirstfork=0
  echo "    {" >> rsrc.c
  isfirst=1
  
  find rsrc/$fork -type f | while read file; do
    sz=$(wc -c < $file | sed -e 's/ //g')
    id=$(echo "$file" | sed -e "s@.*/@@;s/[.]rsrc$//;s/[.]/_/g")
    echo "        rsrc.${fork}.${id}: $sz bytes"
    if [ "$isfirst" = "0" ]; then
      echo "        ," >> rsrc.c
    fi
    isfirst="0"
    echo "        {" >> rsrc.c
    echo "            $sz," >> rsrc.c
    echo "            (const char[]) {" >> rsrc.c
    xxd -c 10 -i < $file | sed -e "s/^/              /" >> rsrc.c
    echo "                ,0" >> rsrc.c
    echo "            }" >> rsrc.c
    echo "        }" >> rsrc.c
  done
  echo "    }" >> rsrc.c
done
echo "};" >> rsrc.c
