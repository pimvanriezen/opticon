#!/bin/bash
cat << _EOF_
{
    "vm":[
_EOF_

mkdir -p /var/run/opticon/libvirt.probe
opticon-helper virsh list | grep running | sed -e 's/^ [0-9]* *//;s/ *running//g' | while read vmname; do
  ramkb=$(opticon-helper virsh dominfo "$vmname" | grep '^Used memory' | sed -e 's/.*: *//;s/ .*//')
  numcpu=$(opticon-helper virsh dominfo "$vmname" | grep '^CPU.s' | sed -e 's/.*: *//;s/ .*//')
  ram=$((ramkb / 1024))
  cachefile="/var/run/opticon/libvirt.probe/${vmname}.vm"
  [ -e "$cachefile" ] && . "$cachefile"
  nw_date=$(date +%s)
  nw_cputime=$(opticon-helper virsh cpu-stats --total "$vmname" | grep cpu_time | sed -e 's/.*cpu_time *//;s/ .*//')
  if [ -z "$last_date" ]; then
    echo "        { name:\"$vmname\", cores:$numcpu, ram:$ram, cpu:0.0 }"
  else
    tdiff=$((nw_date - last_date))
    [ $tdiff -lt 1 ] && tdiff=1
    cpuperc=$(echo "scale=2; 100 * ($nw_cputime - $last_cputime) / $tdiff" | bc -q)
    echo "        { name:\"$vmname\", cores:$numcpu, ram:$ram, cpu:${cpuperc} }"
  fi

  printf 'last_date="%s"\n' "$nw_date" > $cachefile
  printf 'last_cputime="%s"\n' "$nw_cputime" >> $cachefile
done
cat << _EOF_
    ]
}
_EOF_
