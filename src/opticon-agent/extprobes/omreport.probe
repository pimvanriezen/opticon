#!/bin/bash

omreportCommand="omreport"
# Uncomment for testing:
#omreportCommand="./omreport.example"


if [ "$1" = "check" ]; then
  command -v $omreportCommand >/dev/null 2>&1
  if [ ! $? = 0 ]; then
    exit 1
  fi
  
  exit 0
fi


cat << _EOF_
{
    "health":[
_EOF_


# Chassis health
readonly FINDING_COMPONENTS=0
readonly PROCESSING_COMPONENTS=1
readonly DONE=2
state=$FINDING_COMPONENTS

$omreportCommand chassis |
  while read status colon component; do
    if [ $state = $FINDING_COMPONENTS ]; then
      if [ "$status" = "SEVERITY" -a "$component" = "COMPONENT" ]; then
        state=$PROCESSING_COMPONENTS
      fi
    elif [ $state = $PROCESSING_COMPONENTS ]; then
      if [ "$status" = "" ]; then
        state=$DONE
      else
        # The ^^ means convert to uppercase
        echo "        { id:\"$component\", s:\"${status^^}\" }"
      fi
    fi
  done


# Storage Controller health
controllerIds=()

controllerId=""
controllerStatus=""
controllerName=""
while read key colon value; do
  if [ "$key" = "ID" ]; then
    controllerId=$value
    controllerIds+=($controllerId)
  elif [ "$key" = "Status" ]; then
    controllerStatus=$value
  elif [ "$key" = "Name" ]; then
    controllerName=$value
    
    # The ^^ means convert to uppercase
    echo "        { id:\"Storage Controller $controllerId $controllerName\", s:\"${controllerStatus^^}\" }"
  fi
done < <($omreportCommand storage controller)
# Using process substitution instead of a pipe to be able to modify the controllerIds array

cat << _EOF_
    ]
_EOF_


# Storage Virtual Disks (raid sets)
cat << _EOF_
    "raid":[
_EOF_

for controllerId in ${controllerIds[@]}; do
  vdiskController=""
  vdiskId=""
  vdiskStatus=""
  vdiskName=""
  vdiskLayout=""
  $omreportCommand storage vdisk controller=$controllerId |
    while read key colon value; do
      if [ "$key" = "Controller" ]; then
        vdiskController="${colon} ${value}"
      elif [ "$key" = "ID" ]; then
        vdiskId=$value
      elif [ "$key" = "Status" ]; then
        vdiskStatus=$value
      elif [ "$key" = "Name" ]; then
        vdiskName=$value
      elif [ "$key" = "Layout" ]; then
        vdiskLayout=$value
        # The ^^ means convert to uppercase
        vdiskStatus=${vdiskStatus^^}
        # The ,, means convert to lowercase
        vdiskLayout=$(echo "${vdiskLayout,,}" | sed -e 's/-//')
        
        vdiskDriveCount=0
        vdiskFailCount=0
        while read key colon value; do
          if [ "$key" = "Status" ]; then
            ((++vdiskDriveCount))
            if [ ! "$value" = "Ok" ]; then
              ((++vdiskFailCount))
            fi
          fi
        done < <($omreportCommand storage pdisk controller=$controllerId vdisk=$vdiskId)
        
        echo "        {
          dev: \"$vdiskController\",
          name: \"vdisk $vdiskId: $vdiskName\",
          level: \"$vdiskLayout\",
          state: \"${vdiskStatus}\",
          count: ${vdiskDriveCount},
          fail: ${vdiskFailCount}
        }"
      fi
    done
done

cat << _EOF_
    ]
}
_EOF_
